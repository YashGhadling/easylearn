/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-10-29 12:28:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class certificates_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Certificates Information</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            width: 80%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            background-color: white;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        tr:nth-child(even) {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("        }\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background-color: #ddd;\r\n");
      out.write("        }\r\n");
      out.write("        .button {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            margin: 10px 5px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            border: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("        .select-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin: 20px 0;\r\n");
      out.write("        }\r\n");
      out.write("        select {\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2>Certificates Information</h2>\r\n");
      out.write("    \r\n");
      out.write("    <form id=\"courseForm\" method=\"get\" action=\"\">\r\n");
      out.write("        <div class=\"select-container\">\r\n");
      out.write("            <label for=\"courseSelect\">Select Course:</label>\r\n");
      out.write("            <select id=\"courseSelect\" name=\"courseId\">\r\n");
      out.write("                <option value=\"\">--All Courses--</option>\r\n");
      out.write("                ");

                    Connection conn = null;
                    Statement stmt = null;
                    ResultSet rs = null;
                    try {
                        // Load JDBC Driver
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        // Establish connection
                        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/easyleran", "root", "");
                        
                        // Create statement
                        stmt = conn.createStatement();
                        
                        // Execute SQL query to get courses
                        String courseSql = "SELECT course_id, course_name FROM courses";
                        rs = stmt.executeQuery(courseSql);
                        
                        while (rs.next()) {
                            String courseId = rs.getString("course_id");
                            String courseName = rs.getString("course_name");
                
      out.write("\r\n");
      out.write("                            <option value=\"");
      out.print( courseId );
      out.write('"');
      out.write('>');
      out.print( courseName );
      out.write("</option>\r\n");
      out.write("                ");

                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                    } catch (ClassNotFoundException e) {
                        e.printStackTrace();
                    } finally {
                        // Close resources
                        try {
                            if (rs != null) rs.close();
                            if (stmt != null) stmt.close();
                            if (conn != null) conn.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                        }
                    }
                
      out.write("\r\n");
      out.write("            </select>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div style=\"text-align: center;\">\r\n");
      out.write("            <button type=\"submit\" class=\"button\">Submit</button>\r\n");
      out.write("            <a href=\"dashboard.jsp\" class=\"button\">Back</a> <!-- Replace with actual previous page URL -->\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    ");

        String selectedCourseId = request.getParameter("courseId");
        if (request.getParameter("courseId") != null && !selectedCourseId.isEmpty()) {
    
      out.write("\r\n");
      out.write("    <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>Sr. No.</th>\r\n");
      out.write("            <th>User Name</th>\r\n");
      out.write("            <th>Course Name</th>\r\n");
      out.write("            <th>Score</th>\r\n");
      out.write("            <th>Issue Date</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");

            conn = null;
            stmt = null;
            rs = null;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/easyleran", "root", "");
                stmt = conn.createStatement();
                
                String sql = "SELECT u.uname, c.course_name, cert.score, cert.issue_date " +
                             "FROM certificates cert " +
                             "JOIN users u ON cert.user_id = u.uid " +
                             "JOIN courses c ON cert.course_id = c.course_id " +
                             "WHERE cert.course_id = '" + selectedCourseId + "'";
                
                rs = stmt.executeQuery(sql);
                
                int srNo = 1;
                while (rs.next()) {
                    String userName = rs.getString("uname");
                    String courseName = rs.getString("course_name");
                    int score = rs.getInt("score");
                    Date issueDate = rs.getDate("issue_date");
        
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>");
      out.print( srNo++ );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( userName );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( courseName );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( score );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( issueDate != null ? issueDate.toString() : "N/A" );
      out.write("</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("        ");

                }
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            } finally {
                try {
                    if (rs != null) rs.close();
                    if (stmt != null) stmt.close();
                    if (conn != null) conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("    <center>\r\n");
      out.write("    <a href=\"");
      out.print( request.getContextPath() );
      out.write("/mails?courseId=");
      out.print( selectedCourseId );
      out.write("\" class=\"button\">Generate PDF</a></center>\r\n");

        } else {
    
      out.write("\r\n");
      out.write("        <p style=\"text-align: center;\">Please select a course and click Submit to view the certificates.</p>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
